/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manage.UserManage;
import model.User;

/**
 *
 * @author NgocTram
 */
public class UserManagementPanel extends javax.swing.JPanel {

    DefaultTableModel tblModel;

    public UserManagementPanel() {
        initComponents();
        initTable();
        loadDataToTableND();
        btnUpdate.setEnabled(false);
        btnLock.setEnabled(false);
        btnUnlock.setEnabled(false);
    }

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Tên đăng nhập", "Họ tên", "Vai trò", "Trạng thái"});
        tblUser.setModel(tblModel);
    }

    private void loadDataToTableND() {
        try {
            UserManage ql = new UserManage();
            List<User> list = ql.findAll();
            tblModel.setRowCount(0);
            for (User nd : list) {
                String lockoutStatus = nd.getLockout() == 0 ? "Hoạt động" : "Đã khóa";
                tblModel.addRow(new Object[]{nd.getTenDangNhap(), nd.getTen(), nd.getVaiTro(), lockoutStatus});
            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public boolean isRong(String s) {
        return (s.equals(""));

    }

    public boolean isNumber(String s) {
        int length = s.length();
        int i;
        for (i = 0; i < length; i++) {
            if (s.charAt(i) < '0' || s.charAt(i) > '9') {
                return false;
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtRole = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnLock = new javax.swing.JButton();
        btnUnlock = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("Vai Trò");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("QUẢN LÝ NGƯỜI DÙNG");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Mật Khẩu");

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/new-icon-16.png"))); // NOI18N
        btnNew.setText("Nhập mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-document-edit-icon-16.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Save-icon.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(74, 74, 74)
                .addComponent(btnSave)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setText("Họ và Tên");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Tên đăng nhập");

        txtRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý nhân viên", "Quản lý chấm công", "Tổng quản lý" }));
        txtRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoleActionPerformed(evt);
            }
        });

        btnLock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Apps-preferences-desktop-user-password-icon-16.png"))); // NOI18N
        btnLock.setText("Khóa Tài Khoản");
        btnLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLockActionPerformed(evt);
            }
        });

        btnUnlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gpa-icon.png"))); // NOI18N
        btnUnlock.setText("Mở Khóa Tài Khoản");
        btnUnlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnUnlock)
                .addGap(15, 15, 15))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLock)
                    .addComponent(btnUnlock)))
        );

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUser.setMinimumSize(new java.awt.Dimension(100, 120));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        tblUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblUserKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                                .addComponent(txtPassword)
                                                .addComponent(txtRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 71, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        try {
            int row = tblUser.getSelectedRow();
            if (row >= 0) {
                String id = (String) tblUser.getValueAt(row, 0);
                UserManage ql = new UserManage();
                User nd = ql.findByMaND(id);
                if (nd != null) {
                    if (nd.getLockout() == 0) {
                        btnLock.setEnabled(true);
                        btnUnlock.setEnabled(false);
                    } else {
                        btnLock.setEnabled(false);
                        btnUnlock.setEnabled(true);
                    }
                    btnUpdate.setEnabled(true);
                    txtTenDangNhap.setEnabled(false);
                    btnSave.setEnabled(false);
                    txtPassword.setEnabled(false);
                    txtName.setText(nd.getTen());
                    txtRole.setSelectedItem(nd.getVaiTro());
                    txtTenDangNhap.setText(nd.getTenDangNhap());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblUserMouseClicked

    private void tblUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblUserKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            try {
                int row = tblUser.getSelectedRow();
                if (row >= 0) {
                    String id = (String) tblUser.getValueAt(row, 0);
                    UserManage ql = new UserManage();
                    User nd = ql.findByMaND(id);
                    if (nd != null) {
                        btnUpdate.setEnabled(true);
                        txtTenDangNhap.setEnabled(false);
                        btnSave.setEnabled(false);
                        txtName.setText(nd.getTen());
                        txtRole.setSelectedItem(nd.getVaiTro());
                        txtTenDangNhap.setText(nd.getTenDangNhap());
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        };
    }//GEN-LAST:event_tblUserKeyReleased

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtName.setText("");
        txtRole.setSelectedItem("");
        txtTenDangNhap.setText("");
        txtTenDangNhap.requestFocus();
        btnSave.setEnabled(true);
        txtTenDangNhap.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnLock.setEnabled(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int loi = 0;
        if (txtRole.getSelectedItem().toString().equals("")) {
            loi = 1;
            txtRole.requestFocus();
        }
        if (txtName.getText().equals("")) {
            loi = 1;
            txtName.requestFocus();
        }
        if (txtTenDangNhap.getText().equals("")) {
            loi = 1;
            txtTenDangNhap.requestFocus();
        }

        if (loi == 1) {
            JOptionPane.showMessageDialog(this, "Không được để trống trường dữ liệu nào!",
                    "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }

        if (loi == 0) {
            try {
                User nd = new User();
                nd.setVaiTro(txtRole.getSelectedItem().toString());
                nd.setTen(txtName.getText());
                nd.setTenDangNhap(txtTenDangNhap.getText());

                UserManage ql = new UserManage();
                int ok = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cập nhật không?",
                        "Hỏi?", JOptionPane.YES_NO_OPTION);
                if (ok != JOptionPane.YES_OPTION) {
                    return;
                }
                if (ql.update(nd)) {
                    loadDataToTableND();
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!",
                            "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
                    btnNewActionPerformed(evt);

                } else {
                    JOptionPane.showMessageDialog(this, "Không tồn tại người dùng này!",
                            "Lỗi!", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Không tồn tại người dùng này!",
                        "Lỗi!", JOptionPane.ERROR_MESSAGE);
                //e.printStackTrace();
            }
            btnNewActionPerformed(evt);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLockActionPerformed
        int loi = 0;
        if (txtTenDangNhap.getText().equals("")) {
            loi = 1;
            txtTenDangNhap.requestFocus();
        }
        if (loi == 1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã nhân viên!",
                    "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }

        if (loi == 0) {
            try {
                UserManage ql = new UserManage();
                int ok = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn khóa tài khoản "
                        + txtTenDangNhap.getText() + " không?!",
                        "Hỏi?", JOptionPane.YES_NO_OPTION);
                if (ok != JOptionPane.YES_OPTION) {
                    return;
                }
                if (ql.lock(txtTenDangNhap.getText())) {

                    loadDataToTableND();
                    JOptionPane.showMessageDialog(this, "Khóa thành công!",
                            "Thông báo!", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Không tồn tại tài khoản này!",
                            "Lỗi!", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Không tồn tại tài khoản này!",
                        "Lỗi!", JOptionPane.ERROR_MESSAGE);
                //e.printStackTrace();
            }
            btnNewActionPerformed(evt);
        }
    }//GEN-LAST:event_btnLockActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int loi = 0;
        if (txtRole.getSelectedItem().toString().equals("")) {
            loi = 1;
            txtRole.requestFocus();
        }
        if (txtName.getText().equals("")) {
            loi = 1;
            txtName.requestFocus();
        }
        if (txtTenDangNhap.getText().equals("")) {
            loi = 1;
            txtTenDangNhap.requestFocus();
        }
        if (txtPassword.getPassword().equals("")) {
            loi = 1;
            txtPassword.requestFocus();
        }
        if (loi == 1) {
            JOptionPane.showMessageDialog(this, "Không được để trống trường dữ liệu nào!",
                    "Lỗi!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (loi == 0) {
            try {
                User nd = new User();
                nd.setVaiTro(txtRole.getSelectedItem().toString());
                nd.setTen(txtName.getText());
                nd.setTenDangNhap(txtTenDangNhap.getText());
                nd.setMatKhau(new String(txtPassword.getPassword()));
                nd.setLockout(0);

                //System.out.print(nd.getLockout());
                UserManage ql = new UserManage();
                if (ql.insert(nd)) {
                    loadDataToTableND();
                    JOptionPane.showMessageDialog(this, "Lưu thành công!",
                            "Thông báo!", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Tài khoản đã được lưu trước đó!",
                            "Lỗi!", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Tài khoản đã được lưu trước đó!",
                        "Lỗi!", JOptionPane.ERROR_MESSAGE);
                //e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoleActionPerformed

    private void btnUnlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnlockActionPerformed
        int loi = 0;
        if (txtTenDangNhap.getText().equals("")) {
            loi = 1;
            txtTenDangNhap.requestFocus();
        }
        if (loi == 1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã nhân viên!",
                    "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }

        if (loi == 0) {
            try {
                UserManage ql = new UserManage();
                int ok = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn mở khóa tài khoản "
                        + txtTenDangNhap.getText() + " không?!",
                        "Hỏi?", JOptionPane.YES_NO_OPTION);
                if (ok != JOptionPane.YES_OPTION) {
                    return;
                }
                if (ql.unlock(txtTenDangNhap.getText())) {

                    loadDataToTableND();
                    JOptionPane.showMessageDialog(this, "Mở khóa thành công!",
                            "Thông báo!", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(this, "Không tồn tại tài khoản này!",
                            "Lỗi!", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Không tồn tại tài khoản này!",
                        "Lỗi!", JOptionPane.ERROR_MESSAGE);
                //e.printStackTrace();
            }
            btnNewActionPerformed(evt);
        }
    }//GEN-LAST:event_btnUnlockActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLock;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUnlock;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JComboBox<String> txtRole;
    private javax.swing.JTextField txtTenDangNhap;
    // End of variables declaration//GEN-END:variables
}
